/**
 * Common CRUD API
 *     A complete user registry, with access permissions,     JWT token, integration and unit tests, using     the RESTful API pattern. 
 *
 * The version of the OpenAPI document: v4.0.1
 * Contact: throyer.dev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package examples.usersregistry.api

import examples.usersregistry.model.ApiError
import examples.usersregistry.model.RecoveryConfirm
import examples.usersregistry.model.RecoveryRequest
import examples.usersregistry.model.RecoveryUpdate
import examples.usersregistry.model.ValidationError
import examples.usersregistry.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object PasswordRecoveryApi {

def apply(baseUrl: String = "http://localhost:8080") = new PasswordRecoveryApi(baseUrl)
}

class PasswordRecoveryApi(baseUrl: String) {

  /**
   * Expected answers:
   *   code 400 : Seq[ValidationError] (Bad Request)
   *   code 401 : ApiError (Unauthorized)
   *   code 204 :  (No Content)
   * 
   * @param recoveryConfirm 
   */
  def confirm(recoveryConfirm: RecoveryConfirm
): Request[Either[ResponseException[String, Exception], Unit], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/recoveries/confirm")
      .contentType("application/json")
      .body(recoveryConfirm)
      .response(asJson[Unit])

  /**
   * Sends a email to user with recovery code
   * 
   * Expected answers:
   *   code 400 : Seq[ValidationError] (Bad Request)
   *   code 401 : ApiError (Unauthorized)
   *   code 204 :  (No Content)
   * 
   * @param recoveryRequest 
   */
  def recovery(recoveryRequest: RecoveryRequest
): Request[Either[ResponseException[String, Exception], Unit], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/recoveries")
      .contentType("application/json")
      .body(recoveryRequest)
      .response(asJson[Unit])

  /**
   * Expected answers:
   *   code 400 : Seq[ValidationError] (Bad Request)
   *   code 401 : ApiError (Unauthorized)
   *   code 204 :  (No Content)
   * 
   * @param recoveryUpdate 
   */
  def update1(recoveryUpdate: RecoveryUpdate
): Request[Either[ResponseException[String, Exception], Unit], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/recoveries/update")
      .contentType("application/json")
      .body(recoveryUpdate)
      .response(asJson[Unit])

}
