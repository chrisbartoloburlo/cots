{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "host": "dev.virtualearth.net",
  "basePath": "/REST/v1",
  "paths": {
    "/Locations": {
      "get": {
        "description": "Get the latitude and longitude coordinates based on a set of address values for any country",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "adminDistrict",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The subdivision name in the country or region for an address. This element is typically treated as the first order administrative subdivision, but in some cases it is the second, third, or fourth order subdivision in a country, dependency, or region.",
            "example": "WA"
          },
          {
            "name": "locality",
            "required": false,
            "in": "query",
            "type": "string",
            "description": " The locality, such as the city or neighborhood, that corresponds to an address.",
            "example": "Seattle"
          },
          {
            "name": "postalCode",
            "required": false,
            "in": "query",
            "type": "string",
            "description": " The post code, postal code, or ZIP Code of an address.",
            "example": "98178"
          },
          {
            "name": "addressLine",
            "required": false,
            "in": "query",
            "type": "string",
            "description": " The official street line of an address relative to the area, as specified by the Locality, or PostalCode, properties. Typical use of this element would be to provide a street address or any official address.",
            "example": "1 Microsoft Way"
          },
          {
            "name": "countryRegion",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "The ISO country code for the country.",
            "example": "AU"
          },
          {
            "name": "includeNeighborhood",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": "Specifies to include the neighborhood in the response when it is available.",
            "enum": [
              0,
              1
            ],
            "default": 0
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Specifies additional values to include.",
            "enum": [
              "ciso2"
            ]
          },
          {
            "name": "maxResults",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": "Specifies the maximum number of locations to return in the response.",
            "maximum": 20,
            "minimum": 1
          },
          {
            "name": "strictMatch",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": " Restricts the geocode result to the country or region that is specified in the countryRegion field and the state, province or territory specified in the adminDistrict field.",
            "enum": [
              0,
              1
            ],
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "One or more Location resources are returned in the response when you make a request by using these URL templates",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      }
    },
    "/Locations/{point}": {
      "get": {
        "description": "Get an address for a specified point (latitude and longitude).",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "includeEntityTypes",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Specifies the entity types that you want to return in the response",
            "enum": [
              "Address",
              "Neighborhood",
              "PopulatedPlace",
              "Postcode1",
              "AdminDivision1",
              "AdminDivision2",
              "CountryRegion"
            ]
          },
          {
            "name": "point",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The coordinates of the location that you want to reverse geocode",
            "example": "47.64054,-122.12934"
          },
          {
            "name": "includeNeighborhood",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": "Specifies to include the neighborhood in the response when it is available.",
            "enum": [
              0,
              1
            ],
            "default": 0
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Specifies additional values to include.",
            "enum": [
              "ciso2"
            ]
          },
          {
            "name": "verboseplacenames",
            "required": false,
            "in": "query",
            "type": "boolean",
            "description": "If true: AdminDistrict names will be in expanded",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "One or more Location resources are returned in the response when you make a request by using these URL templates",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      }
    },
    "/Locations/{query}": {
      "get": {
        "description": "Return latitude and longitude coordinates for a location specified by a query",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "query",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "A string that contains information about a location, such as an address or landmark name.",
            "example": "White%20House"
          },
          {
            "name": "includeNeighborhood",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": "Specifies to include the neighborhood in the response when it is available.",
            "enum": [
              0,
              1
            ],
            "default": 0
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Specifies additional values to include.",
            "enum": [
              "ciso2",
              "queryParse",
              "queryParse, ciso2",
              "ciso2, queryParse"
            ]
          },
          {
            "name": "maxResults",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": "Specifies the maximum number of locations to return in the response.",
            "maximum": 20,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "One or more Location resources are returned in the response when you make a request by using these URL templates",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      }
    },
    "/LocationRecog/{point}": {
      "get": {
        "description": "Get an address for a specified point (latitude and longitude).",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "point",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The coordinates of the location that you want to reverse geocode",
            "example": "47.64054,-122.12934"
          },
          {
            "name": "radius",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": "Search radius in kilometers (KM).",
            "maximum": 2
          },
          {
            "name": "top",
            "required": false,
            "in": "query",
            "type": "integer",
            "description": " The maximum number of entities returned.",
            "maximum": 20
          },
          {
            "name": "dateTime",
            "required": false,
            "in": "query",
            "type": "string",
            "format": "datetime",
            "description": " Date and time at which the location is visited, in UTC format",
            "example": "2018-05-09 13:34:42Z"
          },
          {
            "name": "distanceUnit",
            "required": false,
            "in": "query",
            "type": "string",
            "description": " Unit for the radius parameter",
            "enum": [
              "kilometer",
              "km",
              "mile",
              "ml"
            ],
            "default": "km"
          },
          {
            "name": "verboseplacenames",
            "required": false,
            "in": "query",
            "type": "boolean",
            "description": "If true: admin1 names will be in expanded form",
            "default": false
          },
          {
            "name": "includeEntityTypes",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Specifies the entity types that you want to return in the response",
            "enum": [
              "businessAndPOI",
              "naturalPOI",
              "address"
            ],
            "default": "businessAndPOI"
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "if includeEntityTypes is businessAndPOI, type is required.",
            "enum": [
              "EatDrink",
              "SeeDo",
              "Shop",
              "BanksAndCreditUnions",
              "Hospitals",
              "HotelsAndMotels",
              "Parking"
            ]
          },
          {
            "name": "output",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Output format for the response.",
            "enum": [
              "JSON",
              "XML"
            ]
          }

        ],
        "responses": {
          "200": {
            "description": "One or more Location resources are returned in the response when you make a request by using these URL templates",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      }
    },
    "/LocalSearch": {
      "get": {
        "description": "Make a Local Search API request based on a string query by specifying a user location.",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "if searching by query. The query used to search for local entities."
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "enum": [
              "EatDrink",
              "SeeDo",
              "Shop",
              "BanksAndCreditUnions",
              "Hospitals",
              "HotelsAndMotels",
              "Parking"
            ],
            "type": "string",
            "description": "Either query or type is required, not both"
          },
          {
            "name": "maxResults",
            "required": false,
            "in": "query",
            "description": " Specifies the maximum number of locations to return in the response.",
            "type": "integer",
            "minimum": 1,
            "maximum": 25,
            "default": 5
          },
          {
            "name": "userCircularMapView",
            "required": false,
            "in": "query",
            "description": "A circular geographic region",
            "type": "string",
            "example": "48.604311,-122.981998,5000"
          },
          {
            "name": "userLocation",
            "required": false,
            "in": "query",
            "description": "If userMapView and userCircularMapView are not present, userLocation is required",
            "type": "string",
            "example": "48.604311,-122.981998,5000"
          },
          {
            "name": "userMapView",
            "required": false,
            "in": "query",
            "description": "If userMapView and userCircularView are not present, userLocation is required",
            "type": "string",
            "example": "29.8171041,-122.981995,48.604311,-95.5413725"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Local Search API requests return a list of LocalSearch resources."
          }
        }
      }
    },
    "/Imagery/Map/{imagerySet}/{centerPoint}/{zoomLevel}": {
      "get": {
        "description": "Get a map that is centered at a specified point",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "centerPoint",
            "required": true,
            "in": "path",
            "type": "string",
            "example": "47.610,-122.107",
            "description": "A point on the Earth where the map is centered."
          },
          {
            "name": "declutterPins",
            "required": false,
            "in": "query",
            "description": "Specifies whether to change the display of overlapping pushpins so that they display separately on a map.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "dpi",
            "required": false,
            "in": "query",
            "description": " Specifies the resolution of the labels on the image to retrieve.",
            "type": "string",
            "enum": ["Large", "null"]
          },
          {
            "name": "drawCurve",
            "required": false,
            "in": "query",
            "description": "Used to insert lines, curves, circles, and polygons over an image.",
            "type": "string",
            "example": "37.428175,-122.16968_37.737368,-122.422845_37.869505,-122.2705"
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "The image format to use for the static map.",
            "type": "string",
            "enum": [
              "gif", "jpeg", "png"
            ]
          },
          {
            "name": "heading",
            "required": false,
            "in": "query",
            "description": " Desired camera heading in degrees, clockwise from north.",
            "type": "double",
            "example": 0,
            "maximum": 360,
            "minimum": 0
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "Road",
              "Streetside"
            ]
          },
          {
            "name": "mapArea",
            "required": false,
            "in": "query",
            "description": "The geographic area to display on the map.",
            "type": "string",
            "example": "45.219,-122.325,47.610,-122.107"
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap,Buildings", "OrdnanceSurvey", "TrafficFlow"
            ]
          },
          {
            "name": "mapSize",
            "required": false,
            "in": "query",
            "description": "The width and height in pixels of the static map output.",
            "type": "string",
            "example": "100, 600"
          },
          {
            "name": "mapMetadata",
            "required": false,
            "in": "query",
            "description": "Specifies whether to return metadata for the static map instead of the image.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "pitch",
            "required": false,
            "in": "query",
            "description": "Controls the camera pitch angle.",
            "type": "double",
            "minimum": -90,
            "maximum": 90
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": " The orientation of view for Bird's Eye imagery.",
            "type": "double",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "pushpin",
            "required": false,
            "in": "query",
            "description": "One or more pushpin locations to display on the map.",
            "type": "string",
            "example": "47.610,-122.107;5;P10"
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "description": "A query string that is used to determine the map location to display.",
            "type": "string",
            "example": "Seattle%20Center"
          },
          {
            "name": "zoomLevel",
            "required": true,
            "in": "path",
            "description": "The level of zoom to display.",
            "type": "integer",
            "maximum": 20,
            "minimum": 0
          },
          {
            "name": "fieldOfView",
            "required": false,
            "in": "query",
            "description": "Specifies the horizontal field of view in degrees that should be shown in the image. Either 'fieldOfView' or 'zoomLevel' should be specified, not both.",
            "type": "integer",
            "maximum": 120,
            "minimum": 15
          },
          {
            "name": "highlightEntity",
            "required": false,
            "in": "query",
            "description": "Highlights a polygon for an entity.",
            "type": "integer",
            "enum": [1]
          },
          {
            "name": "style",
            "required": false,
            "in": "query",
            "description": "Specifies a custom map style to apply to the road maps.",
            "type": "string",
            "example": "wt|fc:FF0000;lbc:00FF00_rd|fc:0000FF_g|landColor:FFFFFF"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a map that is centered at a specified point"
          }
        }
      }
    },
    "/Imagery/Map/{imagerySet}": {
      "get": {
        "description": "Get a map that shows a specified map area",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "declutterPins",
            "required": false,
            "in": "query",
            "description": "Specifies whether to change the display of overlapping pushpins so that they display separately on a map.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "dpi",
            "required": false,
            "in": "query",
            "description": " Specifies the resolution of the labels on the image to retrieve.",
            "type": "string",
            "enum": ["Large", "null"]
          },
          {
            "name": "drawCurve",
            "required": false,
            "in": "query",
            "description": "Used to insert lines, curves, circles, and polygons over an image.",
            "type": "string",
            "example": "37.428175,-122.16968_37.737368,-122.422845_37.869505,-122.2705"
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "The image format to use for the static map.",
            "type": "string",
            "enum": [
              "gif", "jpeg", "png"
            ]
          },
          {
            "name": "heading",
            "required": false,
            "in": "query",
            "description": " Desired camera heading in degrees, clockwise from north.",
            "type": "double",
            "example": 0,
            "maximum": 360,
            "minimum": 0
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "Road",
              "Streetside"
            ]
          },
          {
            "name": "mapArea",
            "required": false,
            "in": "query",
            "description": "The geographic area to display on the map.",
            "type": "string",
            "example": "45.219,-122.325,47.610,-122.107"
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap,Buildings", "OrdnanceSurvey", "TrafficFlow"
            ]
          },
          {
            "name": "mapSize",
            "required": false,
            "in": "query",
            "description": "The width and height in pixels of the static map output.",
            "type": "string",
            "example": "100, 600"
          },
          {
            "name": "mapMetadata",
            "required": false,
            "in": "query",
            "description": "Specifies whether to return metadata for the static map instead of the image.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "pitch",
            "required": false,
            "in": "query",
            "description": "Controls the camera pitch angle.",
            "type": "double",
            "minimum": -90,
            "maximum": 90
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": " The orientation of view for Bird's Eye imagery.",
            "type": "double",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "pushpin",
            "required": false,
            "in": "query",
            "description": "One or more pushpin locations to display on the map.",
            "type": "string",
            "example": "47.610,-122.107;5;P10"
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "description": "A query string that is used to determine the map location to display.",
            "type": "string",
            "example": "Seattle%20Center"
          },
          {
            "name": "fieldOfView",
            "required": false,
            "in": "query",
            "description": "Specifies the horizontal field of view in degrees that should be shown in the image.",
            "type": "integer",
            "maximum": 120,
            "minimum": 15
          },
          {
            "name": "highlightEntity",
            "required": false,
            "in": "query",
            "description": "Highlights a polygon for an entity.",
            "type": "integer",
            "enum": [1]
          },
          {
            "name": "style",
            "required": false,
            "in": "query",
            "description": "Specifies a custom map style to apply to the road maps.",
            "type": "string",
            "example": "wt|fc:FF0000;lbc:00FF00_rd|fc:0000FF_g|landColor:FFFFFF"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a map that shows a specified map area"
          }
        }
      }
    },
    "/Imagery/Map/{imagerySet}/{centerPoint}/{zoomLevel}/Routes/{travelMode}": {
      "get": {
        "description": "Get a map that is centered at the specified point and that displays a route",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "The image format to use for the static map.",
            "type": "string",
            "enum": [
              "gif", "jpeg", "png"
            ]
          },
          {
            "name": "centerPoint",
            "required": true,
            "in": "path",
            "type": "string",
            "example": "47.610,-122.107",
            "description": "A point on the Earth where the map is centered."
          },
          {
            "name": "avoid",
            "required": false,
            "in": "query",
            "description": "Specifies the road types to minimize or avoid when the route is created for the driving travel mode.",
            "type": "string",
            "enum": [
              "highways",
              "tolls",
              "minimizeHighways",
              "minimizeTolls"
            ]
          },
          {
            "name": "distanceBeforeFirstTurn",
            "required": false,
            "in": "query",
            "description": " Specifies the distance before the first turn is allowed in the route. if travelMode is Driving, distanceBeforeFirstTurn is required",
            "type": "integer"
          },
          {
            "name": "dateTime",
            "required": false,
            "in": "query",
            "description": "The timeType parameter identifies the desired transit time, such as arrival time or departure time. if travelMode is Transit, dateTime is required",
            "type": "string",
            "format": "datetime"
          },
          {
            "name": "maxSolutions",
            "required": false,
            "in": "query",
            "description": "Specifies the maximum number of transit routes to return. if travelMode is Transit or Driving, maxSolutions is required",
            "type": "integer",
            "default": 1
          },
          {
            "name": "optimize",
            "required": false,
            "in": "query",
            "description": "Specifies what parameters to use to optimize the route on the map.",
            "type": "string",
            "enum": [
              "distance",
              "time",
              "timeWithTraffic"
            ]
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "Road",
              "Streetside"
            ]
          },
          {
            "name": "timeType",
            "required": false,
            "in": "query",
            "description": "Specifies how to interpret the date and transit time value that is specified by the dateTime parameter. if travelMode is Transit, timeType is required",
            "type": "string",
            "enum": [
              "Arrival",
              "Departure",
              "LastAvailable"
            ]
          },
          {
            "name": "travelMode",
            "required": false,
            "in": "path",
            "description": "The mode of travel for the route.",
            "type": "string",
            "enum": [
              "Driving", "Walking", "Transit"
            ]
          },
          {
            "name": "waypoint.0",
            "required": true,
            "in": "query",
            "description": "Specifies two or more locations that define the route and that are in sequential order",
            "type": "string",
            "example": "Seattle,WA;64;1"
          },
          {
            "name": "waypoint.1",
            "required": true,
            "in": "query",
            "description": "Specifies two or more locations that define the route and that are in sequential order",
            "type": "string",
            "example": "Redmond,WA;66;2"
          },
          {
            "name": "zoomLevel",
            "required": true,
            "in": "path",
            "description": "The level of zoom to display.",
            "type": "integer",
            "maximum": 20,
            "minimum": 0
          },
          {
            "name": "pushpin",
            "required": false,
            "in": "query",
            "description": "One or more pushpin locations to display on the map.",
            "type": "string",
            "example": "47.610,-122.107;5;P10"
          },
          {
            "name": "mapArea",
            "required": false,
            "in": "query",
            "description": "The geographic area to display on the map.",
            "type": "string",
            "example": "45.219,-122.325,47.610,-122.107"
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap,Buildings", "OrdnanceSurvey", "TrafficFlow"
            ]
          },
          {
            "name": "mapSize",
            "required": false,
            "in": "query",
            "description": "The width and height in pixels of the static map output.",
            "type": "string",
            "example": "100, 600"
          },
          {
            "name": "mapMetadata",
            "required": false,
            "in": "query",
            "description": "Specifies whether to return metadata for the static map instead of the image.",
            "type": "integer",
            "enum": [0, 1]
          }
        ],
        "responses": {
          "200": {
            "description": "Get a map that shows a specified map area"
          }
        }
      }
    },
    "/Imagery/Map/{imagerySet}/Routes/{travelMode}": {
      "get": {
        "description": "Get a map that is centered at the specified point and that displays a route",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "avoid",
            "required": false,
            "in": "query",
            "description": "Specifies the road types to minimize or avoid when the route is created for the driving travel mode.",
            "type": "string",
            "enum": [
              "highways",
              "tolls",
              "minimizeHighways",
              "minimizeTolls"
            ]
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "The image format to use for the static map.",
            "type": "string",
            "enum": [
              "gif", "jpeg", "png"
            ]
          },
          {
            "name": "distanceBeforeFirstTurn",
            "required": false,
            "in": "query",
            "description": " Specifies the distance before the first turn is allowed in the route. if travelMode is Driving, distanceBeforeFirstTurn is required",
            "type": "integer"
          },
          {
            "name": "dateTime",
            "required": false,
            "in": "query",
            "description": "The timeType parameter identifies the desired transit time, such as arrival time or departure time. if travelMode is Transit, dateTime is required",
            "type": "string",
            "format": "datetime",
            "example": "03/01/2011 05:42:00"
          },
          {
            "name": "maxSolutions",
            "required": false,
            "in": "query",
            "description": "Specifies the maximum number of transit routes to return. if travelMode is Transit, maxSolutions is required",
            "type": "integer",
            "default": 1
          },
          {
            "name": "optimize",
            "required": false,
            "in": "query",
            "description": "Specifies what parameters to use to optimize the route on the map.",
            "type": "string",
            "enum": [
              "distance",
              "time",
              "timeWithTraffic"
            ]
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "Road",
              "Streetside"
            ]
          },
          {
            "name": "timeType",
            "required": false,
            "in": "query",
            "description": "Specifies how to interpret the date and transit time value that is specified by the dateTime parameter. if travelMode is Transit, timeType is required",
            "type": "string",
            "enum": [
              "Arrival",
              "Departure",
              "LastAvailable"
            ]
          },
          {
            "name": "travelMode",
            "required": false,
            "in": "path",
            "description": "The mode of travel for the route.",
            "type": "string",
            "enum": [
              "Driving", "Walking", "Transit"
            ]
          },
          {
            "name": "waypoint.0",
            "required": true,
            "in": "query",
            "description": "Specifies two or more locations that define the route and that are in sequential order",
            "type": "string",
            "example": "Seattle,WA;64;1"
          },
          {
            "name": "waypoint.1",
            "required": true,
            "in": "query",
            "description": "Specifies two or more locations that define the route and that are in sequential order",
            "type": "string",
            "example": "Redmond,WA;66;2"
          },
          {
            "name": "zoomLevel",
            "required": true,
            "in": "query",
            "description": "The level of zoom to display.",
            "type": "integer",
            "maximum": 20,
            "minimum": 0
          },
          {
            "name": "pushpin",
            "required": false,
            "in": "query",
            "description": "One or more pushpin locations to display on the map.",
            "type": "string",
            "example": "47.610,-122.107;5;P10"
          },
          {
            "name": "mapArea",
            "required": false,
            "in": "query",
            "description": "The geographic area to display on the map.",
            "type": "string",
            "example": "45.219,-122.325,47.610,-122.107"
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap,Buildings", "OrdnanceSurvey", "TrafficFlow"
            ]
          },
          {
            "name": "mapSize",
            "required": false,
            "in": "query",
            "description": "The width and height in pixels of the static map output.",
            "type": "string",
            "example": "100, 600"
          },
          {
            "name": "mapMetadata",
            "required": false,
            "in": "query",
            "description": "Specifies whether to return metadata for the static map instead of the image.",
            "type": "integer",
            "enum": [0, 1]
          }
        ],
        "responses": {
          "200": {
            "description": "Get a map that shows a specified map area"
          }
        }
      }
    },
    "/Imagery/Map/{imagerySet}/{query}": {
      "get": {
        "description": "Get a map that shows a specified map area",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "declutterPins",
            "required": false,
            "in": "query",
            "description": "Specifies whether to change the display of overlapping pushpins so that they display separately on a map.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "dpi",
            "required": false,
            "in": "query",
            "description": " Specifies the resolution of the labels on the image to retrieve.",
            "type": "string",
            "enum": ["Large", "null"]
          },
          {
            "name": "drawCurve",
            "required": false,
            "in": "query",
            "description": "Used to insert lines, curves, circles, and polygons over an image.",
            "type": "string",
            "example": "37.428175,-122.16968_37.737368,-122.422845_37.869505,-122.2705"
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "The image format to use for the static map.",
            "type": "string",
            "enum": [
              "gif", "jpeg", "png"
            ]
          },
          {
            "name": "heading",
            "required": false,
            "in": "query",
            "description": " Desired camera heading in degrees, clockwise from north.",
            "type": "double",
            "example": 0,
            "maximum": 360,
            "minimum": 0
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "Road",
              "Streetside"
            ]
          },
          {
            "name": "mapArea",
            "required": false,
            "in": "query",
            "description": "The geographic area to display on the map.",
            "type": "string",
            "example": "45.219,-122.325,47.610,-122.107"
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap,Buildings", "OrdnanceSurvey", "TrafficFlow"
            ]
          },
          {
            "name": "mapSize",
            "required": false,
            "in": "query",
            "description": "The width and height in pixels of the static map output.",
            "type": "string",
            "example": "100, 600"
          },
          {
            "name": "mapMetadata",
            "required": false,
            "in": "query",
            "description": "Specifies whether to return metadata for the static map instead of the image.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "pitch",
            "required": false,
            "in": "query",
            "description": "Controls the camera pitch angle.",
            "type": "double",
            "minimum": -90,
            "maximum": 90
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": " The orientation of view for Bird's Eye imagery.",
            "type": "double",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "pushpin",
            "required": false,
            "in": "query",
            "description": "One or more pushpin locations to display on the map.",
            "type": "string",
            "example": "47.610,-122.107;5;P10"
          },
          {
            "name": "query",
            "required": false,
            "in": "path",
            "description": "A query string that is used to determine the map location to display.",
            "type": "string",
            "example": "Seattle%20Center"
          },
          {
            "name": "fieldOfView",
            "required": false,
            "in": "query",
            "description": "Specifies the horizontal field of view in degrees that should be shown in the image. ",
            "type": "integer",
            "maximum": 120,
            "minimum": 15
          },
          {
            "name": "highlightEntity",
            "required": false,
            "in": "query",
            "description": "Highlights a polygon for an entity.",
            "type": "integer",
            "enum": [1]
          },
          {
            "name": "style",
            "required": false,
            "in": "query",
            "description": "Specifies a custom map style to apply to the road maps.",
            "type": "string",
            "example": "wt|fc:FF0000;lbc:00FF00_rd|fc:0000FF_g|landColor:FFFFFF"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a map that shows a specified map area"
          }
        }
      }
    },
    "/Imagery/Map/Streetside/{centerPoint}/{zoomLevel}": {
      "get": {
        "description": "Get a map that shows a specified map area",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "centerPoint",
            "required": true,
            "in": "path",
            "type": "string",
            "example": "47.610,-122.107",
            "description": "A point on the Earth where the map is centered."
          },
          {
            "name": "declutterPins",
            "required": false,
            "in": "query",
            "description": "Specifies whether to change the display of overlapping pushpins so that they display separately on a map.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "dpi",
            "required": false,
            "in": "query",
            "description": " Specifies the resolution of the labels on the image to retrieve.",
            "type": "string",
            "enum": ["Large", "null"]
          },
          {
            "name": "drawCurve",
            "required": false,
            "in": "query",
            "description": "Used to insert lines, curves, circles, and polygons over an image.",
            "type": "string",
            "example": "37.428175,-122.16968_37.737368,-122.422845_37.869505,-122.2705"
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "The image format to use for the static map.",
            "type": "string",
            "enum": [
              "gif", "jpeg", "png"
            ]
          },
          {
            "name": "heading",
            "required": false,
            "in": "query",
            "description": " Desired camera heading in degrees, clockwise from north.",
            "type": "double",
            "example": 0,
            "maximum": 360,
            "minimum": 0
          },
          {
            "name": "mapArea",
            "required": false,
            "in": "query",
            "description": "The geographic area to display on the map.",
            "type": "string",
            "example": "45.219,-122.325,47.610,-122.107"
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap,Buildings", "OrdnanceSurvey", "TrafficFlow"
            ]
          },
          {
            "name": "mapSize",
            "required": false,
            "in": "query",
            "description": "The width and height in pixels of the static map output.",
            "type": "string",
            "example": "100, 600"
          },
          {
            "name": "mapMetadata",
            "required": false,
            "in": "query",
            "description": "Specifies whether to return metadata for the static map instead of the image.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "pitch",
            "required": false,
            "in": "query",
            "description": "Controls the camera pitch angle.",
            "type": "double",
            "minimum": -90,
            "maximum": 90
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": " The orientation of view for Bird's Eye imagery.",
            "type": "double",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "pushpin",
            "required": false,
            "in": "query",
            "description": "One or more pushpin locations to display on the map.",
            "type": "string",
            "example": "47.610,-122.107;5;P10"
          },
          {
            "name": "zoomLevel",
            "required": true,
            "in": "path",
            "description": "The level of zoom to display.",
            "type": "integer",
            "maximum": 20,
            "minimum": 0
          },
          {
            "name": "fieldOfView",
            "required": false,
            "in": "query",
            "description": "Specifies the horizontal field of view in degrees that should be shown in the image. Either 'fieldOfView' or 'zoomLevel' should be specified, not both.",
            "type": "integer",
            "maximum": 120,
            "minimum": 15
          },
          {
            "name": "highlightEntity",
            "required": false,
            "in": "query",
            "description": "Highlights a polygon for an entity.",
            "type": "integer",
            "enum": [1]
          },
          {
            "name": "style",
            "required": false,
            "in": "query",
            "description": "Specifies a custom map style to apply to the road maps.",
            "type": "string",
            "example": "wt|fc:FF0000;lbc:00FF00_rd|fc:0000FF_g|landColor:FFFFFF"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a map that shows a specified map area"
          }
        }
      }
    },
    "/Imagery/Map/Streetside/{address}": {
      "get": {
        "description": "Get a map that shows a specified map area",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "declutterPins",
            "required": false,
            "in": "query",
            "description": "Specifies whether to change the display of overlapping pushpins so that they display separately on a map.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "dpi",
            "required": false,
            "in": "query",
            "description": " Specifies the resolution of the labels on the image to retrieve.",
            "type": "string",
            "enum": ["Large", "null"]
          },
          {
            "name": "drawCurve",
            "required": false,
            "in": "query",
            "description": "Used to insert lines, curves, circles, and polygons over an image.",
            "type": "string",
            "example": "37.428175,-122.16968_37.737368,-122.422845_37.869505,-122.2705"
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "The image format to use for the static map.",
            "type": "string",
            "enum": [
              "gif", "jpeg", "png"
            ]
          },
          {
            "name": "heading",
            "required": false,
            "in": "query",
            "description": " Desired camera heading in degrees, clockwise from north.",
            "type": "double",
            "example": 0,
            "maximum": 360,
            "minimum": 0
          },
          {
            "name": "mapArea",
            "required": false,
            "in": "query",
            "description": "The geographic area to display on the map.",
            "type": "string",
            "example": "45.219,-122.325,47.610,-122.107"
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap,Buildings", "OrdnanceSurvey", "TrafficFlow"
            ]
          },
          {
            "name": "mapSize",
            "required": false,
            "in": "query",
            "description": "The width and height in pixels of the static map output.",
            "type": "string",
            "example": "100, 600"
          },
          {
            "name": "mapMetadata",
            "required": false,
            "in": "query",
            "description": "Specifies whether to return metadata for the static map instead of the image.",
            "type": "integer",
            "enum": [0, 1]
          },
          {
            "name": "pitch",
            "required": false,
            "in": "query",
            "description": "Controls the camera pitch angle.",
            "type": "double",
            "minimum": -90,
            "maximum": 90
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": " The orientation of view for Bird's Eye imagery.",
            "type": "double",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "pushpin",
            "required": false,
            "in": "query",
            "description": "One or more pushpin locations to display on the map.",
            "type": "string",
            "example": "47.610,-122.107;5;P10"
          },
          {
            "name": "address",
            "required": false,
            "in": "path",
            "description": "A query string that is used to determine the map location to display.",
            "type": "string",
            "example": "1%20Microsoft%20Way%20Redmond,%20WA"
          },
          {
            "name": "zoomLevel",
            "required": true,
            "in": "query",
            "description": "The level of zoom to display.",
            "type": "integer",
            "maximum": 20,
            "minimum": 0
          },
          {
            "name": "fieldOfView",
            "required": false,
            "in": "query",
            "description": "Specifies the horizontal field of view in degrees that should be shown in the image. Either 'fieldOfView' or 'zoomLevel' should be specified, not both.",
            "type": "integer",
            "maximum": 120,
            "minimum": 15
          },
          {
            "name": "highlightEntity",
            "required": false,
            "in": "query",
            "description": "Highlights a polygon for an entity.",
            "type": "integer",
            "enum": [1]
          },
          {
            "name": "style",
            "required": false,
            "in": "query",
            "description": "Specifies a custom map style to apply to the road maps.",
            "type": "string",
            "example": "wt|fc:FF0000;lbc:00FF00_rd|fc:0000FF_g|landColor:FFFFFF"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a map that shows a specified map area"
          }
        }
      }
    },
    "/Imagery/Metadata/{imagerySet}": {
      "get": {
        "description": "Make a Local Search API request based on a string query by specifying a user location.",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery for which you are requesting metadata.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "BirdseyeV2",
              "BirdseyeV2WithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "OrdnanceSurvey",
              "Road",
              "RoadOnDemand",
              "Streetside"
            ]
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Specifies to provide additional information about the imagery as part of the response.",
            "type": "string",
            "enum": ["ImageryProviders"]
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": "The orientation of the viewport to use for the imagery metadata. if imagerySet is Birdseye, orientation is required",
            "type": "number",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "uriScheme",
            "required": false,
            "in": "query",
            "description": "Specifies the scheme that image URL in the response should use.",
            "type": "string",
            "enum": [
              "http",
              "https"
            ]
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap",
              "Background",
              "Foreground",
              "TrafficFlow",
              "Buildings"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get imagery metadata."
          }
        }
      }
    },
    "/Imagery/Metadata/{imagerySet}/{centerPoint}": {
      "get": {
        "description": "Make a Local Search API request based on a string query by specifying a user location.",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery for which you are requesting metadata.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "BirdseyeV2",
              "BirdseyeV2WithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "OrdnanceSurvey",
              "Road",
              "RoadOnDemand",
              "Streetside"
            ]
          },
          {
            "name": "centerPoint",
            "required": true,
            "in": "path",
            "type": "string",
            "example": "47.610,-122.107",
            "description": "if imagerySet is Birdseye, BirdseyeWithLabels, or Streetside, centerPoint is required. The center point to use for the imagery metadata."
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Specifies to provide additional information about the imagery as part of the response.",
            "type": "string",
            "enum": ["ImageryProviders"]
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": "The orientation of the viewport to use for the imagery metadata. if imagerySet is Birdseye, orientation is required",
            "type": "number",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "uriScheme",
            "required": false,
            "in": "query",
            "description": "Specifies the scheme that image URL in the response should use.",
            "type": "string",
            "enum": [
              "http",
              "https"
            ]
          },
          {
            "name": "zoomLevel",
            "required": false,
            "in": "query",
            "description": "The level of zoom to use for the imagery metadata. if imagerySet is Road, Aerial, or AerialWithLabels, zoomLevel is required",
            "type": "integer",
            "maximum": 21,
            "minimum": 1
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap",
              "Background",
              "Foreground",
              "TrafficFlow",
              "Buildings"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get imagery metadata.",
            "schema": {
              "$ref": "#/definitions/imageryMetadata"
            }
          }
        }
      }
    },
    "/Imagery/BasicMetadata/{imagerySet}/{centerPoint}": {
      "get": {
        "description": "Make a Local Search API request based on a string query by specifying a user location.",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "type": "string",
            "description": "BingMapsAPIKey",
            "enum": [
              "AtI47DZkFsqZK_2Ks7A_68EwjlpTLNI2imXFZey-6jt_YnFE1n3SXVZ6umljRFch"
            ]
          },
          {
            "name": "imagerySet",
            "required": true,
            "in": "path",
            "type": "string",
            "description": "The type of imagery for which you are requesting metadata.",
            "enum": [
              "Aerial",
              "AerialWithLabels",
              "AerialWithLabelsOnDemand",
              "Birdseye",
              "BirdseyeWithLabels",
              "BirdseyeV2",
              "BirdseyeV2WithLabels",
              "CanvasDark",
              "CanvasLight",
              "CanvasGray",
              "OrdnanceSurvey",
              "Road",
              "RoadOnDemand",
              "Streetside"
            ]
          },
          {
            "name": "centerPoint",
            "required": true,
            "in": "path",
            "type": "string",
            "example": "47.610,-122.107",
            "description": "if imagerySet is Birdseye, BirdseyeWithLabels, or Streetside, centerPoint is required. The center point to use for the imagery metadata."
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Specifies to provide additional information about the imagery as part of the response.",
            "type": "string",
            "enum": [
              "ImageryProviders"
            ]
          },
          {
            "name": "orientation",
            "required": false,
            "in": "query",
            "description": "The orientation of the viewport to use for the imagery metadata. if imagerySet is Birdseye, orientation is required",
            "type": "number",
            "minimum": 0,
            "maximum": 360
          },
          {
            "name": "uriScheme",
            "required": false,
            "in": "query",
            "description": "Specifies the scheme that image URL in the response should use.",
            "type": "string",
            "enum": [
              "http",
              "https"
            ]
          },
          {
            "name": "zoomLevel",
            "required": false,
            "in": "query",
            "description": "The level of zoom to use for the imagery metadata. if imagerySet is Road, Aerial, or AerialWithLabels, zoomLevel is required",
            "type": "integer",
            "maximum": 21,
            "minimum": 1
          },
          {
            "name": "mapLayer",
            "required": false,
            "in": "query",
            "description": "A display layer that renders on top of the imagery set.",
            "type": "string",
            "enum": [
              "Basemap",
              "Background",
              "Foreground",
              "TrafficFlow",
              "Buildings"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get imagery metadata."
          }
        }
      }
    }
  },
  "definitions": {
    "Location": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "authenticationResultCode": {
          "type": "string"
        },
        "brandLogoUri": {
          "type": "string"
        },
        "resourceSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceSets"
          }
        }
      }
    },
    "resourceSets": {
      "type": "object",
      "properties": {
        "estimatedTotal": {
          "type": "integer"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resources"
          }
        }
      }
    },
    "resources": {
      "type": "object",
      "properties": {
        "__type": {
          "type": "string"
        },
        "bbox":{
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "imageryMetadata": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "authenticationResultCode": {
          "type": "string"
        },
        "resourceSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/imageryResourceSets"
          }
        }
      }
    },
    "imageryResourceSets": {
      "type": "object",
      "properties": {
        "estimatedTotal": {
          "type": "integer"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/imageryResources"
          }
        }
      }
    },
    "imageryResources": {
      "type": "object",
      "properties": {
        "__type": {
          "type": "string"
        },
        "imageHeight": {
          "type": "integer"
        },
        "imageUrl": {
          "type": "string"
        },
        "imageUrlSubdomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imageWidth": {
          "type": "integer"
        },
        "zoomMax": {
          "type": "integer"
        },
        "zoomMin": {
          "type": "integer"
        }
      }
    }
  },
  "info": {
    "title": "Bing Maps Api",
    "version": "1.0.0"
  }
}
