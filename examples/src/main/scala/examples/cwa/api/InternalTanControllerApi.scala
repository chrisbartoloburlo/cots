/**
 * cwa-verification-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package examples.cwa.api

import examples.cwa.model.AuthorizationToken
import examples.cwa.model.Tan
import examples.cwa.model.TeleTan
import examples.cwa.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object InternalTanControllerApi {

def apply(baseUrl: String = "http://localhost:8080") = new InternalTanControllerApi(baseUrl)
}

class InternalTanControllerApi(baseUrl: String) {

  /**
   * A teleTAN is a human readable TAN with 7 characters which is supposed to be issued via call line
   * 
   * Expected answers:
   *   code 500 :  (Internal Server Error)
   *   code 400 :  (Bad Request)
   *   code 405 :  (Method Not Allowed)
   *   code 415 :  (Unsupported Media Type)
   *   code 201 : TeleTan (TeleTan created)
   * 
   * @param authorization 
   * @param xCWATELETANTYPE 
   */
  def createTeleTan(authorization: AuthorizationToken, xCWATELETANTYPE: Option[String] = None
): Request[Either[ResponseException[String, Exception], TeleTan], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/version/v1/tan/teletan")
      .contentType("application/json")
      .header("Authorization", authorization.toString)
      .header("X-CWA-TELETAN-TYPE", xCWATELETANTYPE.toString)
      .response(asJson[TeleTan])

  /**
   * The provided Tan is verified to be formerly issued by the verification server
   * 
   * Expected answers:
   *   code 500 :  (Internal Server Error)
   *   code 400 :  (Bad Request)
   *   code 405 :  (Method Not Allowed)
   *   code 415 :  (Unsupported Media Type)
   *   code 200 : Any (Tan is valid an formerly issued by the verification server)
   *              Headers :
   *                X-CWA-TELETAN-TYPE - Type of the TeleTan (TEST or EVENT)
   *   code 404 : Any (Tan could not be verified)
   * 
   * @param tan 
   */
  def verifyTan(tan: Tan
): Request[Either[ResponseException[String, Exception], Any], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/version/v1/tan/verify")
      .contentType("application/json")
      .body(tan)
      .response(asJson[Any])

}
