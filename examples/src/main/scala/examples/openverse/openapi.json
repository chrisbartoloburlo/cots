{
  "swagger": "2.0",
  "info": {
    "title": "Openverse API consumer docs",
    "description": "This documentation is focused towards consumers who are using the Openverse API.\nThe developer documentation for the Openverse API can be found [here]().\n\n\n# Introduction\n\nThe Openverse API is a system that allows programmatic access\nto public domain digital media. It is our ambition to index and catalog billions\nof openly-licensed works, including articles, songs, videos, photographs,\npaintings, and more. Using this API, developers will be able to access the\ndigital commons in their own applications.\n\nPlease note that there is a rate limit of 100 requests per day and 5 requests\nper hour rate limit in place for anonymous users. This is fine for introducing\nyourself to the API, but we strongly recommend that you obtain an API key as\nsoon as possible. Authorized clients have a higher rate limit of 10000 requests\nper day and 100 requests per minute. Additionally, Openverse can give your key\nan even higher limit that fits your application's needs. See the\n[Register and Authenticate section](#section/Register-and-Authenticate) for\ninstructions on obtaining an API key.\n\n# Register and Authenticate\n\n## Register for a key\nBefore using the Openverse API, you need to register access via OAuth2. This can\nbe done using the `/v1/auth_tokens/register` endpoint.\n\nExample on how to register for a key:\n```bash\n$ curl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\": \"My amazing project\", \"description\": \"To access Openverse API\", \"email\": \"user@example.com\"}' \\\n  \"https://api.openverse.engineering/v1/auth_tokens/register\"\n```\nIf your request is successful, you will get a `client_id` and `client_secret`.\n\nExample of successful request:\n```json\n{\n    \"client_secret\" : \"YhVjvIBc7TuRJSvO2wIi344ez5SEreXLksV7GjalLiKDpxfbiM8qfUb5sNvcwFOhBUVzGNdzmmHvfyt6yU3aGrN6TAbMW8EOkRMOwhyXkN1iDetmzMMcxLVELf00BR2e\",\n    \"client_id\" : \"pm8GMaIXIhkjQ4iDfXLOvVUUcIKGYRnMlZYApbda\",\n    \"name\" : \"My amazing project\"\n}\n```\n\n## Authenticate\nIn order to use the Openverse API endpoints, you need to include access token in\nthe header. This can be done by exchanging your client credentials for a token\nusing the `/v1/auth_tokens/token/` endpoint.\n\nExample on how to authenticate using OAuth2:\n```bash\n$ curl \\\n  -X POST \\\n  -d \"client_id=pm8GMaIXIhkjQ4iDfXLOvVUUcIKGYRnMlZYApbda&client_secret=YhVjvIBc7TuRJSvO2wIi344ez5SEreXLksV7GjalLiKDpxfbiM8qfUb5sNvcwFOhBUVzGNdzmmHvfyt6yU3aGrN6TAbMW8EOkRMOwhyXkN1iDetmzMMcxLVELf00BR2e&grant_type=client_credentials\" \\\n  \"https://api.openverse.engineering/v1/auth_tokens/token/\"\n```\nIf your request is successful, you will get an access token.\n\nExample of successful request:\n```json\n {\n    \"access_token\" : \"DLBYIcfnKfolaXKcmMC8RIDCavc2hW\",\n    \"scope\" : \"read write groups\",\n    \"expires_in\" : 36000,\n    \"token_type\" : \"Bearer\"\n }\n```\n\nCheck your email for a verification link. After you have followed the link, your\nAPI key will be activated.\n\n## Using Access Token\nInclude the `access_token` in the authorization header to use your key in your\nfuture API requests.\n\nExample on how to make an authenticated request:\n```bash\n$ curl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images?q=test\"\n```\n\n> **NOTE:** Your token will be throttled like an anonymous user until the email\n> address has been verified.\n\n# Glossary\n\n| Term              | Definition |\n|-------------------|---|\n| API               | an abbreviation for Application Programming Interface |\n| OAuth2            | an authorization framework that enables a third party application to get access to an HTTP service |\n| access token      | a private string that authorizes an application to make API requests |\n| client ID         | a publicly exposed string used by Openverse API to identify the application |\n| client secret     | a private string that authenticates the identity of the application to the Openverse API |\n| CC                | an abbreviation for Creative Commons |\n| copyright         | a type of intellectual property that gives the owner an exclusive right to reproduce, publish, sell or distribute content |\n| mature content    | any content that requires the audience to be 18 and older |\n| sensitive content | any content that depicts graphic violence, adult content, and hostility or malice against others based on their race, religion, disability, sexual orientation, ethnicity and national origin |\n\n# Contribute\n\nWe love pull requests! If you’re interested in\n[contributing on Github](https://github.com/WordPress/openverse-api/blob/main/CONTRIBUTING.md), here’s a\ntodo list to get started.\n\n- Read up about [Django REST Framework](https://www.django-rest-framework.org/),\n  which is the framework used to build Openverse API\n- Read up about [drf-yasg](https://drf-yasg.readthedocs.io/en/stable/), which is\n  a tool used to generate real Swagger/OpenAPI 2.0 specifications\n- Read up about Documentation Guidelines, which provides guidelines on how to\n  contribute to documentation, documentation styles and cheat sheet for drf-yasg\n- Run the server locally by following this\n  [link](https://github.com/wordpress/openverse-api#running-the-server-locally)\n- Update documentation or codebase\n- Make sure the updates passed the automated tests in this\n  [file](https://github.com/WordPress/openverse-api/blob/master/.github/workflows/integration-tests.yml)\n- Commit and push\n- Create pull request\n",
    "termsOfService": "https://wordpress.github.io/openverse-api/terms_of_service.html",
    "contact": {
      "email": "openverse@wordpress.org"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/WordPress/openverse-api/blob/HEAD/LICENSE"
    },
    "x-logo": {
      "url": "https://raw.githubusercontent.com/WordPress/openverse/HEAD/brand/logo.svg",
      "backgroundColor": "#fafafa"
    },
    "version": "1.0.0"
  },
  "host": "localhost:50280",
  "schemes": [
    "http"
  ],
  "basePath": "/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Bearer"
    }
  },
  "paths": {
    "/audio/": {
      "get": {
        "operationId": "audio_search",
        "description": "\naudio_search is an API endpoint to search audio files using a query string.\n\nBy using this endpoint, you can obtain search results based on specified query and\noptionally filter results by\n`q`, `license`, `license_type`, `creator`, `tags`, `title`, `filter_dead`, `extension`, `mature`, `qa`, `page_size`, `source`, `excluded_source`, `category` and `length`.\n\n\nResults are ranked in order of relevance and paginated on the basis of the `page` param.\nThe `page_size` param controls the total number of pages.\n\nAlthough there may be millions of relevant records, only the most relevant several\nthousand records can be viewed. This is by design: the search endpoint should be used to\nfind the top 10,000 most relevant results, not for exhaustive search or bulk download of\nevery barely relevant result. As such, the caller should not try to access pages beyond\n`page_count`, or else the server will reject the query.\n\nFor more precise results, you can go to the\n[Openverse Syntax Guide](https://search.creativecommons.org/search-help)\nfor information about creating queries and\n[Apache Lucene Syntax Guide](https://lucene.apache.org/core/2_9_4/queryparsersyntax.html)\nfor information on structuring advanced searches.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "source",
            "in": "query",
            "description": "A comma separated list of data sources; available data sources include: `none_found`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "excluded_source",
            "in": "query",
            "description": "A comma separated list of data sources; available data sources include: `none_found`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "q",
            "in": "query",
            "description": "A query string that should not exceed 200 characters in length",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "license",
            "in": "query",
            "description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "license_type",
            "in": "query",
            "description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "creator",
            "in": "query",
            "description": "Search by creator only. Cannot be used with `q`.",
            "required": false,
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Search by tag only. Cannot be used with `q`.",
            "required": false,
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          {
            "name": "title",
            "in": "query",
            "description": "Search by title only. Cannot be used with `q`.",
            "required": false,
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          {
            "name": "filter_dead",
            "in": "query",
            "description": "Control whether 404 links are filtered out.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "extension",
            "in": "query",
            "description": "A comma separated list of desired file extensions.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "mature",
            "in": "query",
            "description": "Whether to include content for mature audiences.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "qa",
            "in": "query",
            "description": "If enabled, searches are performed against the quality assurance index instead of production.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "category",
            "in": "query",
            "description": "A comma separated list of categories; available categories include: `audiobook`, `music`, `news`, `podcast`, `pronunciation`, and `sound_effect`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "length",
            "in": "query",
            "description": "A comma separated list of lengths; available lengths include: `long`, `medium`, `short`, and `shortest`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "peaks",
            "in": "query",
            "description": "Whether to include the waveform peaks or not",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AudioSearch"
              }
            },
            "examples": {
              "application/json": {
                "result_count": 1,
                "page_count": 0,
                "page_size": 20,
                "page": 1,
                "results": [
                  {
                    "id": "8624ba61-57f1-4f98-8a85-ece206c319cf",
                    "title": "Wish You Were Here",
                    "foreign_landing_url": "https://www.jamendo.com/track/1214935",
                    "url": "https://mp3d.jamendo.com/download/track/1214935/mp32",
                    "creator": "The.madpix.project",
                    "creator_url": "https://www.jamendo.com/artist/441585/the.madpix.project",
                    "license": "by-nc-sa",
                    "license_version": "3.0",
                    "license_url": "https://creativecommons.org/licenses/by-nc-sa/3.0/",
                    "provider": "jamendo",
                    "source": "jamendo",
                    "category": "music",
                    "genres": [
                      "dance",
                      "electronic",
                      "house"
                    ],
                    "filesize": null,
                    "filetype": "mp3",
                    "tags": [
                      {
                        "name": "vocal"
                      },
                      {
                        "name": "female"
                      },
                      {
                        "name": "speed_medium"
                      },
                      {
                        "name": "guitar"
                      },
                      {
                        "name": "strings"
                      },
                      {
                        "name": "energetic"
                      },
                      {
                        "name": "acoustic"
                      },
                      {
                        "name": "vocal"
                      },
                      {
                        "name": "voice"
                      },
                      {
                        "name": "funkyhouse"
                      }
                    ],
                    "alt_files": null,
                    "attribution": null,
                    "fields_matched": [
                      "title"
                    ],
                    "mature": false,
                    "audio_set": null,
                    "duration": 270000,
                    "bit_rate": 128000,
                    "sample_rate": 44100,
                    "thumbnail": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/thumb/",
                    "detail_url": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/",
                    "related_url": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/related/",
                    "waveform": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/waveform/"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/InputError"
            },
            "examples": {
              "application/json": {
                "error": "InputError",
                "detail": "Invalid input given for fields. 'license' -> License 'PDMNBCG' does not exist.",
                "fields": [
                  "license"
                ]
              }
            }
          }
        },
        "tags": [
          "audio"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Example 0: Search for audio using single query parameter\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=test\"\n\n\n# Example 1: Search for audio using multiple query parameters\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=test&license=pdm,by&categories=illustration&page_size=1&page=1\"\n\n\n# Example 2: Search for audio that is an exact match of Giacomo Puccini\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=\"Giacomo Puccini\"\"\n\n\n# Example 3: Search for audio related to both dog and cat\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=dog+cat\"\n\n\n# Example 4: Search for audio related to dog or cat, but not necessarily both\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=dog|cat\"\n\n\n# Example 5: Search for audio related to dog but won't include results related to 'pug'\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=dog -pug\"\n\n\n# Example 6: Search for audio matching anything with the prefix 'net'\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=net*\"\n\n\n# Example 7: Search for audio matching dogs that are either corgis or labrador\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=dogs + (corgis | labrador)\"\n\n\n# Example 8: Search for audio matching strings close to the term theater with a difference of one character\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/?q=theatre~1\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        }]
    },
    "/audio/stats/": {
      "get": {
        "operationId": "audio_stats",
        "description": "\naudio_stats is an API endpoint to get a list of all content providers and their\nrespective number of audio files in the Openverse catalog.\n\n\nYou can use this endpoint to get details about content providers such as `source_name`,\n`display_name`, and `source_url` along with a count of the number of individual items\nindexed from them.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Provider"
              }
            },
            "examples": {
              "application/json": [
                {
                  "source_name": "freesound",
                  "display_name": "Freesound",
                  "source_url": "https://freesound.org/",
                  "logo_url": null,
                  "media_count": 828
                },
                {
                  "source_name": "jamendo",
                  "display_name": "Jamendo",
                  "source_url": "https://www.jamendo.com",
                  "logo_url": null,
                  "media_count": 180
                },
                {
                  "source_name": "wikimedia_audio",
                  "display_name": "Wikimedia",
                  "source_url": "https://commons.wikimedia.org",
                  "logo_url": null,
                  "media_count": 3992
                }
              ]
            }
          }
        },
        "tags": [
          "audio"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Get the statistics for audio sources\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/stats/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        }]
    },
    "/audio/{identifier}/": {
      "get": {
        "operationId": "audio_detail",
        "description": "\naudio_detail is an API endpoint to get the details of a specified audio ID.\n\nBy using this endpoint, you can get audio details such as\n`id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `genres`, `filesize`, `filetype`, `tags`, `alt_files`, `attribution`, `fields_matched`, `mature`, `audio_set`, `duration`, `bit_rate`, `sample_rate`, `thumbnail`, `detail_url`, `related_url`, `waveform` and `peaks`.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Audio"
            },
            "examples": {
              "application/json": {
                "id": "8624ba61-57f1-4f98-8a85-ece206c319cf",
                "title": "Wish You Were Here",
                "foreign_landing_url": "https://www.jamendo.com/track/1214935",
                "url": "https://mp3d.jamendo.com/download/track/1214935/mp32",
                "creator": "The.madpix.project",
                "creator_url": "https://www.jamendo.com/artist/441585/the.madpix.project",
                "license": "by-nc-sa",
                "license_version": "3.0",
                "license_url": "https://creativecommons.org/licenses/by-nc-sa/3.0/",
                "provider": "jamendo",
                "source": "jamendo",
                "category": "music",
                "genres": [
                  "dance",
                  "electronic",
                  "house"
                ],
                "filesize": 7139840,
                "filetype": "mp3",
                "tags": [
                  {
                    "name": "vocal"
                  },
                  {
                    "name": "female"
                  },
                  {
                    "name": "speed_medium"
                  },
                  {
                    "name": "guitar"
                  },
                  {
                    "name": "strings"
                  },
                  {
                    "name": "energetic"
                  },
                  {
                    "name": "acoustic"
                  },
                  {
                    "name": "vocal"
                  },
                  {
                    "name": "voice"
                  },
                  {
                    "name": "funkyhouse"
                  }
                ],
                "alt_files": null,
                "attribution": "\"Wish You Were Here\" by The.madpix.project is licensed under CC BY-NC-SA 3.0. To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/.",
                "fields_matched": [],
                "mature": null,
                "audio_set": {
                  "title": "Wish You Were Here",
                  "foreign_landing_url": "https://www.jamendo.com/album/145774/wish-you-were-here",
                  "creator": "The.madpix.project",
                  "creator_url": "https://www.jamendo.com/artist/441585/the.madpix.project",
                  "url": "https://usercontent.jamendo.com?type=album&id=145774&width=200",
                  "filesize": null,
                  "filetype": null
                },
                "duration": 270000,
                "bit_rate": 128000,
                "sample_rate": 44100,
                "thumbnail": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/thumb/",
                "detail_url": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/",
                "related_url": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/related/",
                "waveform": "https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/waveform/"
              }
            }
          },
          "404": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            },
            "examples": {
              "application/json": {
                "detail": "Not found."
              }
            }
          }
        },
        "tags": [
          "audio"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Get the details of audio ID 8624ba61-57f1-4f98-8a85-ece206c319cf\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/audio/{identifier}/related/": {
      "get": {
        "operationId": "audio_related",
        "description": "\nrecommendations_audio_read is an API endpoint to get related audio files for a specified\naudio ID.\n\nBy using this endpoint, you can get the details of related audio such as\n`id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `genres`, `filesize`, `filetype`, `tags`, `alt_files`, `attribution`, `fields_matched`, `mature`, `audio_set`, `duration`, `bit_rate`, `sample_rate`, `thumbnail`, `detail_url`, `related_url`, `waveform` and `peaks`.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Audio"
            },
            "examples": {
              "application/json": {
                "result_count": 10000,
                "page_count": 0,
                "results": [
                  {
                    "title": "File:Mozart - Eine kleine Nachtmusik - 1. Allegro.ogg",
                    "id": "36537842-b067-4ca0-ad67-e00ff2e06b2e",
                    "creator": "Wolfgang Amadeus Mozart",
                    "creator_url": "https://en.wikipedia.org/wiki/Wolfgang_Amadeus_Mozart",
                    "url": "https://upload.wikimedia.org/wikipedia/commons/2/24/Mozart_-_Eine_kleine_Nachtmusik_-_1._Allegro.ogg",
                    "provider": "wikimedia",
                    "source": "wikimedia",
                    "license": "by-sa",
                    "license_version": "2.0",
                    "license_url": "https://creativecommons.org/licenses/by-sa/2.0/",
                    "foreign_landing_url": "https://commons.wikimedia.org/w/index.php?curid=3536953",
                    "detail_url": "http://api.openverse.engineering/v1/audio/36537842-b067-4ca0-ad67-e00ff2e06b2e",
                    "related_url": "http://api.openverse.engineering/v1/recommendations/audio/36537842-b067-4ca0-ad67-e00ff2e06b2e",
                    "fields_matched": [
                      "description",
                      "title"
                    ],
                    "tags": [
                      {
                        "name": "exam"
                      },
                      {
                        "name": "tactics"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            },
            "examples": {
              "application/json": {
                "detail": "An internal server error occurred."
              }
            }
          }
        },
        "tags": [
          "audio"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Get related audio files for audio ID 8624ba61-57f1-4f98-8a85-ece206c319cf\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/related/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/audio/{identifier}/report/": {
      "post": {
        "operationId": "audio_report",
        "description": "\naudio_report_create is an API endpoint to report an issue about a specified audio ID to\nOpenverse.\n\nBy using this endpoint, you can report an audio file if it infringes copyright, contains\nmature or sensitive content and others.\n\n\nBy using this endpoint, you can report a file if it infringes copyright, contains mature\nor sensitive content and others.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudioReportRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AudioReportRequest"
            },
            "examples": {
              "application/json": {
                "identifier": "8624ba61-57f1-4f98-8a85-ece206c319cf",
                "reason": "mature",
                "description": "This audio contains sensitive content"
              }
            }
          }
        },
        "tags": [
          "audio"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Report an issue about audio ID 8624ba61-57f1-4f98-8a85-ece206c319cf\ncurl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  -d '{\"reason\": \"mature\", \"description\": \"This audio contains sensitive content\"}' \\\n  \"https://api.openverse.engineering/v1/audio/8624ba61-57f1-4f98-8a85-ece206c319cf/report/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/audio/{identifier}/thumb/": {
      "get": {
        "operationId": "audio_thumbnail",
        "description": "\nthumbnail is an API endpoint to retrieve the scaled down and compressed thumbnail\nof the artwork of an audio track or its audio set.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "full_size",
            "in": "query",
            "description": "whether to render the actual image and not a thumbnail version",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-nullable": true
          },
          {
            "name": "compressed",
            "in": "query",
            "description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`",
            "required": false,
            "type": "boolean",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MediaThumbnailRequest"
            }
          }
        },
        "tags": [
          "audio"
        ]
      },
      "parameters": [
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/auth_tokens/token/": {
      "post": {
        "operationId": "authorize_api_oauth2",
        "parameters": [
          {
            "name": "client_id",
            "in": "formData",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "client_secret",
            "in": "formData",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "grant_type",
            "in": "formData",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2AuthenticationSuccessful"
            },
            "examples": {
              "application/json": {
                "access_token" : "DLBYIcfnKfolaXKcmMC8RIDCavc2hW",
                "scope" : "read write groups",
                "expires_in" : 36000,
                "token_type" : "Bearer"
              }
            }
          }
        },
        "tags": [
          "auth_tokens"
        ]
      }
    },
    "/auth_tokens/register/": {
      "post": {
        "operationId": "register_api_oauth2",
        "description": "\nregister_api_oauth2 is an API endpoint to register access to the API via OAuth2.\n\nUpon registering, you will receive a `client_id` and `client_secret`, which you can then\nuse to authenticate using the standard OAuth2 Client Credentials flow. See the Register\nand Authenticate section for instructions on registering access to the API via OAuth2.\n\n> **WARNING:** You must keep `client_secret` confidential, as anybody with your\n> `client_secret` can impersonate your application.\n\nAuthenticated users have higher rate limits than anonymous users. Additionally, by\nidentifying yourself, you can request Openverse to adjust your personal rate limit\ndepending on your organization's needs.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name",
                "description",
                "email"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "title": "Name",
                  "description": "A unique human-readable name for your application or project requiring access to the Openverse API.",
                  "type": "string",
                  "maxLength": 150,
                  "minLength": 1
                },
                "description": {
                  "title": "Description",
                  "description": "A description of what you are trying to achieve with your project using the API. Please provide as much detail as possible!",
                  "type": "string",
                  "maxLength": 10000,
                  "minLength": 1
                },
                "email": {
                  "title": "Email",
                  "description": "A valid email that we can reach you at if we have any questions about your use case or data consumption.",
                  "type": "string",
                  "format": "email",
                  "maxLength": 254,
                  "minLength": 1
                }
              },
              "example": {
                "name": "My amazing project",
                "description": "To access Openverse API",
                "email": "user@example.com"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2RegistrationSuccessful"
            },
            "examples": {
              "application/json": {
                "name": "My amazing project",
                "client_id": "pm8GMaIXIhkjQ4iDfXLOvVUUcIKGYRnMlZYApbda",
                "client_secret": "YhVjvIBc7TuRJSvO2wIi344ez5SEreXLksV7GjalLiKDpxfbiM8qfUb5sNvcwFOhBUVzGNdzmmHvfyt6yU3aGrN6TAbMW8EOkRMOwhyXkN1iDetmzMMcxLVELf00BR2e"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "required": [
                "name"
              ],
              "type": "string"
            },
            "examples": {
              "name": "o auth2 registration with this name already exists."
            }
          }
        },
        "tags": [
          "auth_tokens"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Register for a key\ncurl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\": \"My amazing project\", \"description\": \"To access Openverse API\", \"email\": \"user@example.com\"}' \\\n  https://api.openverse.engineering/v1/auth_tokens/register/\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        }]
    },
    "/images/": {
      "get": {
        "operationId": "image_search",
        "description": "\nimage_search is an API endpoint to search images using a query string.\n\nBy using this endpoint, you can obtain search results based on specified query and\noptionally filter results by\n`q`, `license`, `license_type`, `creator`, `tags`, `title`, `filter_dead`, `extension`, `mature`, `qa`, `page_size`, `source`, `excluded_source`, `category`, `aspect_ratio` and `size`.\n\n\nResults are ranked in order of relevance and paginated on the basis of the `page` param.\nThe `page_size` param controls the total number of pages.\n\nAlthough there may be millions of relevant records, only the most relevant several\nthousand records can be viewed. This is by design: the search endpoint should be used to\nfind the top 10,000 most relevant results, not for exhaustive search or bulk download of\nevery barely relevant result. As such, the caller should not try to access pages beyond\n`page_count`, or else the server will reject the query.\n\nFor more precise results, you can go to the\n[Openverse Syntax Guide](https://search.creativecommons.org/search-help)\nfor information about creating queries and\n[Apache Lucene Syntax Guide](https://lucene.apache.org/core/2_9_4/queryparsersyntax.html)\nfor information on structuring advanced searches.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "q",
            "in": "query",
            "description": "A query string that should not exceed 200 characters in length",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "source",
            "in": "query",
            "description": "A comma separated list of data sources; available data sources include: `none_found`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "excluded_source",
            "in": "query",
            "description": "A comma separated list of data sources; available data sources include: `none_found`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "license",
            "in": "query",
            "description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "license_type",
            "in": "query",
            "description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "creator",
            "in": "query",
            "description": "Search by creator only. Cannot be used with `q`.",
            "required": false,
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Search by tag only. Cannot be used with `q`.",
            "required": false,
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          {
            "name": "title",
            "in": "query",
            "description": "Search by title only. Cannot be used with `q`.",
            "required": false,
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          {
            "name": "filter_dead",
            "in": "query",
            "description": "Control whether 404 links are filtered out.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "extension",
            "in": "query",
            "description": "A comma separated list of desired file extensions.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "mature",
            "in": "query",
            "description": "Whether to include content for mature audiences.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "qa",
            "in": "query",
            "description": "If enabled, searches are performed against the quality assurance index instead of production.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "category",
            "in": "query",
            "description": "A comma separated list of categories; available categories include: `digitized_artwork`, `illustration`, and `photograph`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "aspect_ratio",
            "in": "query",
            "description": "A comma separated list of aspect ratios; available aspect ratios include: `square`, `tall`, and `wide`.",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "A comma separated list of image sizes; available image sizes include: `large`, `medium`, and `small`.",
            "required": false,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageSearch"
            },
            "examples": {
              "application/json": {
                "result_count": 1,
                "page_count": 0,
                "page_size": 20,
                "page": 1,
                "results": [
                  {
                    "id": "4bc43a04-ef46-4544-a0c1-63c63f56e276",
                    "title": "Tree Bark Photo",
                    "foreign_landing_url": "https://stocksnap.io/photo/XNVBVXO3B7",
                    "url": "https://cdn.stocksnap.io/img-thumbs/960w/XNVBVXO3B7.jpg",
                    "creator": "Tim Sullivan",
                    "creator_url": "https://www.secretagencygroup.com",
                    "license": "cc0",
                    "license_version": "1.0",
                    "license_url": "https://creativecommons.org/publicdomain/zero/1.0/",
                    "provider": "stocksnap",
                    "source": "stocksnap",
                    "category": "photograph",
                    "filesize": null,
                    "filetype": null,
                    "tags": [
                      {
                        "name": "tree"
                      },
                      {
                        "name": "bark"
                      },
                      {
                        "name": "texture"
                      },
                      {
                        "name": "wood"
                      },
                      {
                        "name": "nature"
                      },
                      {
                        "name": "pattern"
                      },
                      {
                        "name": "rough"
                      },
                      {
                        "name": "surface"
                      },
                      {
                        "name": "brown"
                      },
                      {
                        "name": "old"
                      },
                      {
                        "name": "background"
                      },
                      {
                        "name": "trunk"
                      },
                      {
                        "name": "natural"
                      },
                      {
                        "name": "forest"
                      },
                      {
                        "name": "detail"
                      },
                      {
                        "name": "lumber"
                      },
                      {
                        "name": "weathered"
                      },
                      {
                        "name": "timber"
                      },
                      {
                        "name": "stump"
                      },
                      {
                        "name": "closeup"
                      },
                      {
                        "name": "root"
                      }
                    ],
                    "attribution": null,
                    "fields_matched": [
                      "title"
                    ],
                    "mature": false,
                    "height": null,
                    "width": null,
                    "thumbnail": "https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/thumb/",
                    "detail_url": "https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/",
                    "related_url": "https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/related/"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/InputError"
            },
            "examples": {
              "application/json": {
                "error": "InputError",
                "detail": "Invalid input given for fields. 'license' -> License 'PDMNBCG' does not exist.",
                "fields": [
                  "license"
                ]
              }
            }
          }
        },
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Example 0: Search for images using single query parameter\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=test\"\n\n\n# Example 1: Search for images using multiple query parameters\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=test&license=pdm,by&categories=illustration&page_size=1&page=1\"\n\n\n# Example 2: Search for images that are an exact match of Claude Monet\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=\"Claude Monet\"\"\n\n\n# Example 3: Search for images related to both dog and cat\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=dog+cat\"\n\n\n# Example 4: Search for images related to dog or cat, but not necessarily both\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=dog|cat\"\n\n\n# Example 5: Search for images related to dog but won't include results related to 'pug'\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=dog -pug\"\n\n\n# Example 6: Search for images matching anything with the prefix ‘net’\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=net*\"\n\n\n# Example 7: Search for images matching dogs that are either corgis or labrador\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=dogs + (corgis | labrador)\"\n\n\n# Example 8: Search for images matching strings close to the term theaterwith a difference of one character\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/?q=theatre~1\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        }]
    },
    "/images/oembed/": {
      "get": {
        "operationId": "image_oembed",
        "description": "\noembed_list is an API endpoint to retrieve embedded content from a specified image URL.\n\nBy using this endpoint, you can retrieve embedded content such as `version`, `type`,\n`width`, `height`, `title`, `author_name`, `author_url` and `license_url`.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "url",
            "in": "query",
            "description": "The URL of an image.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Oembed"
            },
            "examples": {
              "application/json": {
                "version": "1.0",
                "type": "photo",
                "width": 6016,
                "height": 4016,
                "title": "Tree Bark Photo",
                "author_name": "Tim Sullivan",
                "author_url": "https://www.secretagencygroup.com",
                "license_url": "https://creativecommons.org/publicdomain/zero/1.0/"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            },
            "examples": {
              "application/json": {
                "detail": "An internal server error occurred."
              }
            }
          }
        },
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Retrieve embedded content from an image's URL\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/oembed/?url=https://wordpress.org/openverse/photos/4bc43a04-ef46-4544-a0c1-63c63f56e276\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        }]
    },
    "/images/stats/": {
      "get": {
        "operationId": "image_stats",
        "description": "\nimage_stats is an API endpoint to get a list of all content providers and their\nrespective number of images in the Openverse catalog.\n\n\nYou can use this endpoint to get details about content providers such as `source_name`,\n`display_name`, and `source_url` along with a count of the number of individual items\nindexed from them.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Provider"
              }
            },
            "examples": {
              "application/json": [
                {
                  "source_name": "flickr",
                  "display_name": "Flickr",
                  "source_url": "https://www.flickr.com",
                  "logo_url": null,
                  "media_count": 2500
                },
                {
                  "source_name": "stocksnap",
                  "display_name": "StockSnap",
                  "source_url": "https://stocksnap.io",
                  "logo_url": null,
                  "media_count": 2500
                }
              ]
            }
          }
        },
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Get the statistics for image sources\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/stats/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        }]
    },
    "/images/{identifier}/": {
      "get": {
        "operationId": "image_detail",
        "description": "\nimage_detail is an API endpoint to get the details of a specified image ID.\n\nBy using this endpoint, you can image details such as\n`id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `filesize`, `filetype`, `tags`, `attribution`, `fields_matched`, `mature`, `height`, `width`, `thumbnail`, `detail_url` and `related_url`.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "examples": {
              "application/json": {
                "id": "4bc43a04-ef46-4544-a0c1-63c63f56e276",
                "title": "Tree Bark Photo",
                "foreign_landing_url": "https://stocksnap.io/photo/XNVBVXO3B7",
                "url": "https://cdn.stocksnap.io/img-thumbs/960w/XNVBVXO3B7.jpg",
                "creator": "Tim Sullivan",
                "creator_url": "https://www.secretagencygroup.com",
                "license": "cc0",
                "license_version": "1.0",
                "license_url": "https://creativecommons.org/publicdomain/zero/1.0/",
                "provider": "stocksnap",
                "source": "stocksnap",
                "category": "photograph",
                "filesize": 896128,
                "filetype": "jpg",
                "tags": [
                  {
                    "name": "tree"
                  },
                  {
                    "name": "bark"
                  },
                  {
                    "name": "texture"
                  },
                  {
                    "name": "wood"
                  },
                  {
                    "name": "nature"
                  },
                  {
                    "name": "pattern"
                  },
                  {
                    "name": "rough"
                  },
                  {
                    "name": "surface"
                  },
                  {
                    "name": "brown"
                  },
                  {
                    "name": "old"
                  },
                  {
                    "name": "background"
                  },
                  {
                    "name": "trunk"
                  },
                  {
                    "name": "natural"
                  },
                  {
                    "name": "forest"
                  },
                  {
                    "name": "detail"
                  },
                  {
                    "name": "lumber"
                  },
                  {
                    "name": "weathered"
                  },
                  {
                    "name": "timber"
                  },
                  {
                    "name": "stump"
                  },
                  {
                    "name": "closeup"
                  },
                  {
                    "name": "root"
                  }
                ],
                "attribution": "\"Tree Bark Photo\" by Tim Sullivan is marked with CC0 1.0. To view the terms, visit https://creativecommons.org/publicdomain/zero/1.0/.",
                "fields_matched": [],
                "mature": null,
                "height": 4016,
                "width": 6016,
                "thumbnail": "https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/thumb/",
                "detail_url": "https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/",
                "related_url": "https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/related/"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            },
            "examples": {
              "application/json": {
                "detail": "Not found."
              }
            }
          }
        },
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Get the details of image ID 4bc43a04-ef46-4544-a0c1-63c63f56e276\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/images/{identifier}/related/": {
      "get": {
        "operationId": "image_related",
        "description": "\nrecommendations_images_read is an API endpoint to get related images for a specified\nimage ID.\n\nBy using this endpoint, you can get the details of related images such as\n`id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `filesize`, `filetype`, `tags`, `attribution`, `fields_matched`, `mature`, `height`, `width`, `thumbnail`, `detail_url` and `related_url`.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "examples": {
              "application/json": {
                "result_count": 10000,
                "page_count": 0,
                "results": [
                  {
                    "title": "exam tactics",
                    "id": "610756ec-ae31-4d5e-8f03-8cc52f31b71d",
                    "creator": "Sean MacEntee",
                    "creator_url": "https://www.flickr.com/photos/18090920@N07",
                    "tags": [
                      {
                        "name": "exam"
                      },
                      {
                        "name": "tactics"
                      }
                    ],
                    "url": "https://live.staticflickr.com/4065/4459771899_07595dc42e.jpg",
                    "thumbnail": "https://api.openverse.engineering/v1/thumbs/610756ec-ae31-4d5e-8f03-8cc52f31b71d",
                    "provider": "flickr",
                    "source": "flickr",
                    "license": "by",
                    "license_version": "2.0",
                    "license_url": "https://creativecommons.org/licenses/by/2.0/",
                    "foreign_landing_url": "https://www.flickr.com/photos/18090920@N07/4459771899",
                    "detail_url": "http://api.openverse.engineering/v1/images/610756ec-ae31-4d5e-8f03-8cc52f31b71d",
                    "related_url": "http://api.openverse.engineering/v1/recommendations/images/610756ec-ae31-4d5e-8f03-8cc52f31b71d"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            },
            "examples": {
              "application/json": {
                "detail": "An internal server error occurred."
              }
            }
          }
        },
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Get related images for image ID 4bc43a04-ef46-4544-a0c1-63c63f56e276\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  \"https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/related/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/images/{identifier}/report/": {
      "post": {
        "operationId": "image_report",
        "description": "\nimages_report_create is an API endpoint to report an issue about a specified image ID to\nOpenverse.\n\nBy using this endpoint, you can report an image if it infringes copyright, contains\nmature or sensitive content and others.\n\n\nBy using this endpoint, you can report a file if it infringes copyright, contains mature\nor sensitive content and others.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageReportRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageReportRequest"
            },
            "examples": {
              "application/json": {
                "identifier": "4bc43a04-ef46-4544-a0c1-63c63f56e276",
                "reason": "mature",
                "description": "Image contains sensitive content"
              }
            }
          }
        },
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\n# Report an issue about image ID 4bc43a04-ef46-4544-a0c1-63c63f56e276\ncurl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  -d '{\"reason\": \"mature\", \"description\": \"Image contains sensitive content\"}' \\\n  \"https://api.openverse.engineering/v1/images/4bc43a04-ef46-4544-a0c1-63c63f56e276/report/\"\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/images/{identifier}/thumb/": {
      "get": {
        "operationId": "image_thumbnail",
        "description": "\nthumbnail is an API endpoint to retrieve the scaled down and compressed thumbnail\nof an image.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "full_size",
            "in": "query",
            "description": "whether to render the actual image and not a thumbnail version",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-nullable": true
          },
          {
            "name": "compressed",
            "in": "query",
            "description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`",
            "required": false,
            "type": "boolean",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MediaThumbnailRequest"
            }
          }
        },
        "tags": [
          "images"
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "type": "string",
          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
        }
      ]
    },
    "/rate_limit/": {
      "get": {
        "operationId": "key_info",
        "description": "\nkey_info is an API endpoint to get information about your API key.\n\nYou can use this endpoint to get information about your API key such as\n`requests_this_minute`, `requests_today`, and `rate_limit_model`.\n\n> **NOTE:** If you get a 403 Forbidden response, it means your access token has expired.\n\n\nYou can refer to the cURL request samples for examples on how to consume this\nendpoint.\n",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1
          }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2KeyInfo"
            },
            "examples": {
              "application/json": {
                "requests_this_minute": 2,
                "requests_today": 40,
                "rate_limit_model": "enhanced"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            },
            "examples": {
              "application/json": "Forbidden"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": "Unknown API key rate limit type"
            }
          }
        },
        "tags": [
          "rate_limit"
        ],
        "x-code-samples": [
          {
            "lang": "Bash",
            "source": "\ncurl \\\n  -H \"Authorization: Bearer DLBYIcfnKfolaXKcmMC8RIDCavc2hW\" \\\n  http://api.openverse.engineering/v1/rate_limit/\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "format",
          "in": "query",
          "required": true,
          "type": "string",
          "minLength": 1
        }]
    }
  },
  "definitions": {
    "Tag": {
      "description": "Tags with detailed metadata, such as accuracy.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of a detailed tag.",
          "type": "string",
          "minLength": 1
        },
        "accuracy": {
          "title": "Accuracy",
          "description": "The accuracy of a machine-generated tag. Human-generated tags do not have an accuracy field.",
          "type": "number"
        }
      },
      "x-nullable": true
    },
    "AudioSet": {
      "description": "Reference to set of which this track is a part.",
      "type": "object",
      "properties": {
        "title": {
          "title": "Title",
          "description": "The name of the media.",
          "type": "string",
          "maxLength": 2000,
          "x-nullable": true
        },
        "foreign_landing_url": {
          "title": "Foreign landing url",
          "description": "The landing page of the work.",
          "type": "string",
          "maxLength": 1000,
          "x-nullable": true
        },
        "creator": {
          "title": "Creator",
          "description": "The name of the media creator.",
          "type": "string",
          "maxLength": 2000,
          "x-nullable": true
        },
        "creator_url": {
          "title": "Creator url",
          "description": "A direct link to the media creator.",
          "type": "string",
          "format": "uri",
          "maxLength": 2000,
          "x-nullable": true
        },
        "url": {
          "title": "Url",
          "description": "The actual URL to the media file.",
          "type": "string",
          "format": "uri",
          "maxLength": 1000,
          "x-nullable": true
        },
        "filesize": {
          "title": "Filesize",
          "description": "Number in bytes, e.g. 1024.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "filetype": {
          "title": "Filetype",
          "description": "The type of the file, related to the file extension.",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        }
      },
      "x-nullable": true
    },
    "Audio": {
      "description": "An array of audios and their details such as `id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `genres`, `filesize`, `filetype`, `tags`, `alt_files`, `attribution`, `fields_matched`, `mature`, `audio_set`, `duration`, `bit_rate`, `sample_rate`, `thumbnail`, `detail_url`, `related_url`, `waveform` and `peaks`.",
      "required": [
        "id",
        "license",
        "tags",
        "fields_matched",
        "mature"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "Our unique identifier for an open-licensed work.",
          "type": "string",
          "minLength": 1
        },
        "title": {
          "title": "Title",
          "description": "The name of the media.",
          "type": "string",
          "maxLength": 2000,
          "x-nullable": true
        },
        "foreign_landing_url": {
          "title": "Foreign landing url",
          "description": "The landing page of the work.",
          "type": "string",
          "maxLength": 1000,
          "x-nullable": true
        },
        "url": {
          "title": "Url",
          "description": "The actual URL to the media file.",
          "type": "string",
          "format": "uri",
          "maxLength": 1000,
          "x-nullable": true
        },
        "creator": {
          "title": "Creator",
          "description": "The name of the media creator.",
          "type": "string",
          "maxLength": 2000,
          "x-nullable": true
        },
        "creator_url": {
          "title": "Creator url",
          "description": "A direct link to the media creator.",
          "type": "string",
          "format": "uri",
          "maxLength": 2000,
          "x-nullable": true
        },
        "license": {
          "title": "License",
          "description": "The name of license for the media.",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "license_version": {
          "title": "License version",
          "description": "The version of the media license.",
          "type": "string",
          "maxLength": 25,
          "x-nullable": true
        },
        "license_url": {
          "title": "License url",
          "description": "A direct link to the license deed or legal terms.",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        },
        "provider": {
          "title": "Provider",
          "description": "The content provider, e.g. Flickr, Jamendo...",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "source": {
          "title": "Source",
          "description": "The source of the data, meaning a particular dataset. Source and provider can be different. Eg: the Google Open Images dataset is source=openimages, but provider=flickr.",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "category": {
          "title": "Category",
          "description": "The top-level classification of this media file.",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "genres": {
          "description": "An array of audio genres such as `rock`, `electronic` for `music` category, or `politics`, `sport`, `education` for `podcast` category",
          "type": "array",
          "items": {
            "title": "Genres",
            "type": "string",
            "maxLength": 80
          },
          "x-nullable": true
        },
        "filesize": {
          "title": "Filesize",
          "description": "Number in bytes, e.g. 1024.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "filetype": {
          "title": "Filetype",
          "description": "The type of the file, related to the file extension.",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "tags": {
          "description": "Tags with detailed metadata, such as accuracy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "x-nullable": true
        },
        "alt_files": {
          "title": "Alt files",
          "description": "JSON describing alternative files for this audio.",
          "type": "object",
          "x-nullable": true
        },
        "attribution": {
          "title": "Attribution",
          "description": "\nThe plain-text English attribution for a media item. Use this to credit creators\nfor their work and fulfill legal attribution requirements.\n",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        },
        "fields_matched": {
          "description": "List the fields that matched the query for this result.",
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "mature": {
          "title": "Mature",
          "description": "Whether the media item is marked as mature",
          "type": "boolean",
          "x-nullable": true
        },
        "audio_set": {
          "$ref": "#/definitions/AudioSet"
        },
        "duration": {
          "title": "Duration",
          "description": "The time length of the audio file in milliseconds.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "bit_rate": {
          "title": "Bit rate",
          "description": "Number in bits per second, eg. 128000.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "sample_rate": {
          "title": "Sample rate",
          "description": "Number in hertz, eg. 44100.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "thumbnail": {
          "title": "Thumbnail",
          "description": "A direct link to the miniature artwork.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "detail_url": {
          "title": "Detail url",
          "description": "A direct link to the detail view of this audio file.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "related_url": {
          "title": "Related url",
          "description": "A link to an endpoint that provides similar audio files.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "waveform": {
          "title": "Waveform",
          "description": "A direct link to the waveform peaks.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        }
      }
    },
    "AudioSearch": {
      "required": [
        "result_count",
        "page_count",
        "page_size",
        "page",
        "results"
      ],
      "type": "object",
      "properties": {
        "result_count": {
          "title": "Result count",
          "description": "The total number of items returned by search result.",
          "type": "integer"
        },
        "page_count": {
          "title": "Page count",
          "description": "The total number of pages returned by search result.",
          "type": "integer"
        },
        "page_size": {
          "title": "Page size",
          "description": "The number of items per page.",
          "type": "integer"
        },
        "page": {
          "title": "Page",
          "description": "The current page number returned in the response.",
          "type": "integer"
        },
        "results": {
          "description": "An array of audios and their details such as `id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `genres`, `filesize`, `filetype`, `tags`, `alt_files`, `attribution`, `fields_matched`, `mature`, `audio_set`, `duration`, `bit_rate`, `sample_rate`, `thumbnail`, `detail_url`, `related_url`, `waveform` and `peaks`.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Audio"
          }
        }
      }
    },
    "InputError": {
      "required": [
        "detail"
      ],
      "type": "object",
      "properties": {
        "detail": {
          "title": "Detail",
          "description": "Mapping of field names with errors from to that field.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    },
    "Provider": {
      "required": [
        "source_name",
        "display_name",
        "source_url"
      ],
      "type": "object",
      "properties": {
        "source_name": {
          "title": "Source name",
          "description": "The source of the media, e.g. flickr",
          "type": "string",
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "description": "The name of content provider, e.g. Flickr",
          "type": "string",
          "minLength": 1
        },
        "source_url": {
          "title": "Source url",
          "description": "The URL of the source, e.g. https://www.flickr.com",
          "type": "string",
          "format": "uri",
          "minLength": 1
        },
        "logo_url": {
          "title": "Logo url",
          "description": "The URL to a logo of the source.",
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "minLength": 1
        },
        "media_count": {
          "title": "Media count",
          "description": "The number of media items indexed from the source.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NotFoundError": {
      "required": [
        "detail"
      ],
      "type": "object",
      "properties": {
        "detail": {
          "title": "Detail",
          "description": "The description for error.",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "AudioReportRequest": {
      "required": [
        "reason"
      ],
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "The ID for media to be reported.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "reason": {
          "title": "Reason",
          "description": "The reason to report media to Openverse.",
          "type": "string",
          "enum": [
            "mature",
            "dmca",
            "other"
          ]
        },
        "description": {
          "title": "Description",
          "description": "The explanation on why media is being reported.",
          "type": "string",
          "maxLength": 500,
          "x-nullable": true
        }
      }
    },
    "MediaThumbnailRequest": {
      "type": "object",
      "properties": {
        "full_size": {
          "title": "Full size",
          "description": "whether to render the actual image and not a thumbnail version",
          "type": "boolean",
          "default": false,
          "x-nullable": true
        },
        "compressed": {
          "title": "Compressed",
          "description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`",
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "OAuth2RegistrationSuccessful": {
      "required": [
        "client_id",
        "client_secret",
        "name",
        "msg"
      ],
      "type": "object",
      "properties": {
        "client_id": {
          "title": "Client id",
          "description": "A publicly exposed string used by Openverse API to identify the application.",
          "type": "string",
          "minLength": 1
        },
        "client_secret": {
          "title": "Client secret",
          "description": "A private string that authenticates the identity of the application to the Openverse API.",
          "type": "string",
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "description": "A unique human-readable name for your application or project requiring access to the Openverse API.",
          "type": "string",
          "minLength": 1
        },
        "msg": {
          "title": "Message",
          "description": "Info message from the application",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "OAuth2AuthenticationSuccessful": {
      "required": [
        "access_token",
        "scope",
        "expires_in",
        "token_type"
      ],
      "type": "object",
      "properties": {
        "access_token": {
          "title": "Access token",
          "type": "string",
          "minLength": 1
        },
        "scope": {
          "title": "Scope",
          "type": "string",
          "minLength": 1
        },
        "expires_in": {
          "title": "Expires in",
          "type": "integer",
          "minLength": 1
        },
        "token_type": {
          "title": "Token type",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Image": {
      "description": "An array of images and their details such as `id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `filesize`, `filetype`, `tags`, `attribution`, `fields_matched`, `mature`, `height`, `width`, `thumbnail`, `detail_url` and `related_url`.",
      "required": [
        "id",
        "license",
        "tags",
        "fields_matched"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "Our unique identifier for an open-licensed work.",
          "type": "string",
          "minLength": 1
        },
        "title": {
          "title": "Title",
          "description": "The name of the media.",
          "type": "string",
          "maxLength": 2000,
          "x-nullable": true
        },
        "foreign_landing_url": {
          "title": "Foreign landing url",
          "description": "The landing page of the work.",
          "type": "string",
          "maxLength": 1000,
          "x-nullable": true
        },
        "url": {
          "title": "Url",
          "description": "The actual URL to the media file.",
          "type": "string",
          "format": "uri",
          "maxLength": 1000,
          "x-nullable": true
        },
        "creator": {
          "title": "Creator",
          "description": "The name of the media creator.",
          "type": "string",
          "maxLength": 2000,
          "x-nullable": true
        },
        "creator_url": {
          "title": "Creator url",
          "description": "A direct link to the media creator.",
          "type": "string",
          "format": "uri",
          "maxLength": 2000,
          "x-nullable": true
        },
        "license": {
          "title": "License",
          "description": "The name of license for the media.",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "license_version": {
          "title": "License version",
          "description": "The version of the media license.",
          "type": "string",
          "maxLength": 25,
          "x-nullable": true
        },
        "license_url": {
          "title": "License url",
          "description": "A direct link to the license deed or legal terms.",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        },
        "provider": {
          "title": "Provider",
          "description": "The content provider, e.g. Flickr, Jamendo...",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "source": {
          "title": "Source",
          "description": "The source of the data, meaning a particular dataset. Source and provider can be different. Eg: the Google Open Images dataset is source=openimages, but provider=flickr.",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "category": {
          "title": "Category",
          "description": "The top-level classification of this media file.",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "filesize": {
          "title": "Filesize",
          "description": "Number in bytes, e.g. 1024.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "filetype": {
          "title": "Filetype",
          "description": "The type of the file, related to the file extension.",
          "type": "string",
          "maxLength": 80,
          "x-nullable": true
        },
        "tags": {
          "description": "Tags with detailed metadata, such as accuracy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "x-nullable": true
        },
        "attribution": {
          "title": "Attribution",
          "description": "\nThe plain-text English attribution for a media item. Use this to credit creators\nfor their work and fulfill legal attribution requirements.\n",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        },
        "fields_matched": {
          "description": "List the fields that matched the query for this result.",
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "mature": {
          "title": "Mature",
          "description": "Whether the media item is marked as mature",
          "type": "boolean",
          "x-nullable": true
        },
        "height": {
          "title": "Height",
          "description": "The height of the image in pixels. Not always available.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "width": {
          "title": "Width",
          "description": "The width of the image in pixels. Not always available.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "thumbnail": {
          "title": "Thumbnail",
          "description": "A direct link to the miniature artwork.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "detail_url": {
          "title": "Detail url",
          "description": "A direct link to the detail view of this audio file.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "related_url": {
          "title": "Related url",
          "description": "A link to an endpoint that provides similar audio files.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        }
      }
    },
    "ImageSearch": {
      "required": [
        "result_count",
        "page_count",
        "page_size",
        "page",
        "results"
      ],
      "type": "object",
      "properties": {
        "result_count": {
          "title": "Result count",
          "description": "The total number of items returned by search result.",
          "type": "integer"
        },
        "page_count": {
          "title": "Page count",
          "description": "The total number of pages returned by search result.",
          "type": "integer"
        },
        "page_size": {
          "title": "Page size",
          "description": "The number of items per page.",
          "type": "integer"
        },
        "page": {
          "title": "Page",
          "description": "The current page number returned in the response.",
          "type": "integer"
        },
        "results": {
          "description": "An array of images and their details such as `id`, `title`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `filesize`, `filetype`, `tags`, `attribution`, `fields_matched`, `mature`, `height`, `width`, `thumbnail`, `detail_url` and `related_url`.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Oembed": {
      "required": [
        "author_name",
        "author_url"
      ],
      "type": "object",
      "properties": {
        "version": {
          "title": "Version",
          "description": "The oEmbed version number. This must be 1.0.",
          "type": "string",
          "readOnly": true,
          "default": "1.0"
        },
        "type": {
          "title": "Type",
          "description": "The resource type. This must be 'photo' for images.",
          "type": "string",
          "readOnly": true,
          "default": "photo"
        },
        "width": {
          "title": "Width",
          "description": "The width of the image in pixels.",
          "type": "integer",
          "readOnly": true
        },
        "height": {
          "title": "Height",
          "description": "The height of the image in pixels.",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "description": "The name of the media.",
          "type": "string",
          "maxLength": 2000,
          "x-nullable": true
        },
        "author_name": {
          "title": "Author name",
          "description": "The name of the media creator.",
          "type": "string",
          "minLength": 1
        },
        "author_url": {
          "title": "Author url",
          "description": "A direct link to the media creator.",
          "type": "string",
          "format": "uri",
          "minLength": 1
        },
        "license_url": {
          "title": "License url",
          "description": "A direct link to the license deed or legal terms.",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        }
      }
    },
    "ImageReportRequest": {
      "required": [
        "reason"
      ],
      "type": "object",
      "properties": {
        "identifier": {
          "title": "Identifier",
          "description": "The ID for media to be reported.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "reason": {
          "title": "Reason",
          "description": "The reason to report media to Openverse.",
          "type": "string",
          "enum": [
            "mature",
            "dmca",
            "other"
          ]
        },
        "description": {
          "title": "Description",
          "description": "The explanation on why media is being reported.",
          "type": "string",
          "maxLength": 500,
          "x-nullable": true
        }
      }
    },
    "OAuth2KeyInfo": {
      "required": [
        "requests_this_minute",
        "requests_today",
        "rate_limit_model"
      ],
      "type": "object",
      "properties": {
        "requests_this_minute": {
          "title": "Requests this minute",
          "description": "The number of requests your key has performed in the last minute.",
          "type": "integer",
          "x-nullable": true
        },
        "requests_today": {
          "title": "Requests today",
          "description": "The number of requests your key has performed in the last day.",
          "type": "integer",
          "x-nullable": true
        },
        "rate_limit_model": {
          "title": "Rate limit model",
          "description": "The type of rate limit applied to your key. Can be 'standard' or 'enhanced'; enhanced users enjoy higher rate limits than their standard key counterparts. Contact Openverse if you need a higher rate limit.",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ForbiddenError": {
      "required": [
        "detail"
      ],
      "type": "object",
      "properties": {
        "detail": {
          "title": "Detail",
          "description": "The description for error.",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InternalServerError": {
      "required": [
        "detail"
      ],
      "type": "object",
      "properties": {
        "detail": {
          "title": "Detail",
          "description": "The description for error.",
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}